%main image processing function!

function mainProcess(filename)


img=imread(filename);
img=img(1:end,1:end,1);
[x,y]=prepImage(filename);
[xSeq,ySeq]=removeArtifacts(x,y);
h=length(img(:,1));



%sweep across values of bMin to find the head; note that because the head
%is typically harder to find, it's useful to keep several candidate points.
headAndTailFound=0;
findHeadCandidates=2;
oldxc=[];
oldyc=[];
while ~headAndTailFound
    done=0;   %okay maybe there's a less dumb way to do this
    bMin=5; %start at a value of 5.  This may change.

    while ~done
        [xC,yC,xP,yP]=findCorners(xSeq,ySeq,h,bMin);
        if length(xC)==1
            done=1;
        else
            bMin=bMin+.125;   %I'll need to find some optimal value here.  
                            %This is computationally cheap so maybe I should just go really low
        end
    end
    
    done=0;
    bMin=5;
    while ~done
        [xC2,yC2,xP,yP]=findCorners(xSeq,ySeq,h,bMin);
        if length(xC2)==findHeadCandidates
            done=1;
        else
            bMin=bMin+.125;   %I'll need to find some optimal value here.  
                            %This is computationally cheap so maybe I should just go really low
        end
    end


    tailPt=intersect(find(xSeq==xC),find(ySeq==yC));
    xC2=setdiff(xC2,xC);
    yC2=setdiff(yC2,yC);
    try
        xC2=setdiff(xC2,oldxc);
        yC2=setdiff(yC2,oldyc);
    catch
    end
    headPt=intersect(find(xSeq==xC2),find(ySeq==yC2));

    imshow(img)
    hold on
    % plot(xSeq,h-ySeq+1,'r','LineWidth',2)
    % plot(xP,h-yP+1,'x')
    % plot(xC,h-yC+1,'x','Color','k','MarkerSize',16)

    %Start splitting into two lines
    %The following code splits the worm into two lines assuming the length of
    %both sides is approximately equal

    l1=abs(headPt-tailPt);
    l2=length(xSeq)-l1;
    if max([l1 l2])<=min([l1 l2])*1.4   %this threshold may need to be changed.  Hopefully not.
        headAndTailFound=1;
    else
        findHeadCandidates=findHeadCandidates+1;
        oldxc=[oldxc xC2];  %build up an array of previously used "false" points
        oldyc=[oldyc yC2];
    end
end



[x1,y1,x2,y2]=splitLines(xSeq,ySeq,l1,l2,tailPt);
plot(x2,h-y2+1,'g')
plot(x1,h-y1+1,'r')

interval1=floor(l1/36);
interval2=floor(l2/36);

x1t=x1(1:interval1:end);
y1t=y1(1:interval1:end);
x2t=x2(1:interval2:end);
y2t=y2(1:interval2:end);

xCenterLine=[];
yCenterLine=[];

for i=1:length(x1t)
    [x,y]=midpoint(x1t(i),y1t(i),x2t(i),y2t(i));
    xCenterLine=[xCenterLine x];
    yCenterLine=[yCenterLine y];
end



plot(xCenterLine,h-yCenterLine+1,'c.')
